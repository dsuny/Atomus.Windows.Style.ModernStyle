<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxa="http://schemas.devexpress.com/winfx/2008/xaml/accordion"
                    xmlns:dxan="http://schemas.devexpress.com/winfx/2008/xaml/accordion/internal"
                    xmlns:dxat="http://schemas.devexpress.com/winfx/2008/xaml/accordion/themekeys"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxmvvminternal="clr-namespace:DevExpress.Mvvm.UI.Interactivity.Internal;assembly=DevExpress.Xpf.Core.v18.1"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/Atomus.Windows.Style.ModernStyle;component/ResourceDictionary/ModernDark/DevExpress/DevExpress.Xpf.Accordion/Generic/Resources.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <dxmvvm:ObjectToObjectConverter x:Key="collapseItemConverter" DefaultTarget="False">
        <dxmvvm:MapItem Source="Container" Target="True"/>
    </dxmvvm:ObjectToObjectConverter>

    <!--<Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Accordion.AccordionItem}" TargetType="{x:Type dxa:AccordionItem}">-->
    <Style TargetType="{x:Type dxa:AccordionItem}">
        <Setter Property="Background"
                Value="Transparent"
                cs:id="Setter_0000"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="GlyphTemplate" Value="{StaticResource AccordionItemDefaultGlyphTemplate}"/>
        <Setter Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=TextForeground}}"/>
        <Setter Property="FontSize" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderFontSize}}"/>
        <Setter Property="FontWeight" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderFontWeight}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxa:AccordionItem}">
                    <ContentControl x:Name="PART_RootContentControl"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    Focusable="False"
                                    FocusVisualStyle="{x:Null}"
                                    Foreground="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=TextForeground}}"
                                    cs:id="ContentControl_0000">
                        <dxmvvm:Interaction.Behaviors>
                            <dxa:AccordionItemForegroundBehavior Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                                                                 ItemDefaultForeground="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderDefaultForeground}}"
                                                                 ItemType="{Binding ItemType, RelativeSource={RelativeSource TemplatedParent}}"
                                                                 RootItemDefaultForeground="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderDefaultForeground}}"
                                                                 TextDefaultForeground="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=TextForeground}}"/>
                        </dxmvvm:Interaction.Behaviors>
                        <Grid x:Name="PART_ItemContainer">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition>
                                    <dxmvvm:Interaction.Behaviors>
                                        <dxa:AccordionItemOffsetBehavior IsTouchEnabled="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource TemplatedParent}}"
                                                                         ItemLevel="{Binding ItemLevel, RelativeSource={RelativeSource TemplatedParent}}"
                                                                         ItemType="{Binding ItemType, RelativeSource={RelativeSource TemplatedParent}}"
                                                                         Offset="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemOffset}}"
                                                                         RemoveOffset="{Binding Path=(dxa:AccordionView.CurrentView).IsSingleRootItemViewMode, RelativeSource={RelativeSource TemplatedParent}}"
                                                                         RootItemDisplayMode="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.RootItemDisplayMode, RelativeSource={RelativeSource TemplatedParent}}"
                                                                         TouchOffset="{StaticResource ItemTouchOffset}"/>
                                    </dxmvvm:Interaction.Behaviors>
                                </ColumnDefinition>
                                <ColumnDefinition x:Name="HeaderColumn" Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="HeaderRow"
                                               Height="Auto"
                                               MinHeight="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderHeight}}"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="PART_HeaderContainer"
                                  Grid.Column="1"
                                  Margin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderContainerMargin}}">
                                <dxa:AccordionItemBackgroundControl x:Name="PART_BackgroundControl"
                                                                    Focusable="False"
                                                                    ItemState="Default"
                                                                    ItemType="{Binding ItemType, RelativeSource={RelativeSource TemplatedParent}}"
                                                                    Template="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemBackgroundTemplate}}"/>
                                <Grid x:Name="PART_HeaderInternalContainer" Margin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderMargin}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="LeftExpandButtonColumn" Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition x:Name="RightExpandButtonColumn" Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <dxa:AccordionExpandButton x:Name="PART_ExpandButton"
                                                               Grid.RowSpan="2"
                                                               Style="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ExpanderButtonStyle}}"/>
                                    <ContentPresenter x:Name="PART_Glyph"
                                                      Grid.Column="1"
                                                      Grid.Row="1"
                                                      Style="{StaticResource glyphPresenterStyle}">
                                        <dxmvvm:Interaction.Behaviors>
                                            <dxa:GlyphMarginBehavior GlyphPosition="{Binding ActualGlyphPosition, RelativeSource={RelativeSource TemplatedParent}}"
                                                                     GlyphTouchMargin="{StaticResource GlyphTouchMargin}"
                                                                     HasGlyph="{Binding Glyph, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:ObjectToBooleanConverter}}"
                                                                     HeaderElementsMargin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=HeaderElementsMargin}}"
                                                                     IsTouchEnabled="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </dxmvvm:Interaction.Behaviors>
                                    </ContentPresenter>
                                    <Border x:Name="PART_Header"
                                            Background="{TemplateBinding Background}"
                                            Grid.Column="2"
                                            Grid.ColumnSpan="3"
                                            Grid.Row="1"
                                            HorizontalAlignment="Stretch"
                                            SnapsToDevicePixels="True"
                                            VerticalAlignment="Stretch">
                                        <ContentPresenter x:Name="PART_HeaderContent"
                                                          ContentSource="Header"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          Margin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=HeaderElementsMargin}}"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <ContentPresenter.Resources>
                                                <Style x:Key="{x:Type TextBlock}" TargetType="TextBlock">
                                                    <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                                </Style>
                                            </ContentPresenter.Resources>
                                        </ContentPresenter>
                                    </Border>
                                    <Border x:Name="PART_RightBorder"
                                            BorderThickness="0"
                                            Grid.Column="7"
                                            Grid.RowSpan="2"
                                            Margin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=HeaderElementsMargin}}"/>
                                </Grid>
                            </Grid>
                            <dxan:AccordionExpander x:Name="PART_Expander"
                                                    CollapseStoryboard="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.CollapseStoryboard, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Duration="0"
                                                    ExpandStoryboard="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.ExpandStoryboard, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Grid.Column="1"
                                                    Grid.Row="1"
                                                    IsExpanded="True">
                                <ItemsPresenter x:Name="ItemsHost"/>
                            </dxan:AccordionExpander>
                        </Grid>
                    </ContentControl>
                    <ControlTemplate.Triggers>
                        <!--#region Misc-->
                        <Trigger Property="AllowAnimation" Value="false">
                            <Setter Property="ExpandStoryboard"
                                    TargetName="PART_Expander"
                                    Value="{x:Null}"/>
                            <Setter Property="CollapseStoryboard"
                                    TargetName="PART_Expander"
                                    Value="{x:Null}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity"
                                    TargetName="PART_HeaderContainer"
                                    Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=DisabledItemOpacity}}"/>
                        </Trigger>
                        <Trigger Property="ItemType" Value="RootItem">
                            <Setter Property="Margin"
                                    TargetName="PART_HeaderInternalContainer"
                                    Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderMargin}}"/>
                            <Setter Property="Margin"
                                    TargetName="PART_Expander"
                                    Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemContainerMargin}}"/>
                            <Setter Property="Margin"
                                    TargetName="PART_HeaderContainer"
                                    Value="0"/>
                        </Trigger>
                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                            <Setter Property="Margin"
                                    TargetName="PART_HeaderContent"
                                    Value="{StaticResource HeaderTouchMargin}"/>
                            <Setter Property="Margin"
                                    TargetName="PART_RightBorder"
                                    Value="{StaticResource HeaderTouchMargin}"/>
                        </Trigger>
                        <Trigger Property="ItemType" Value="Wrapper">
                            <Setter Property="HorizontalAlignment"
                                    TargetName="PART_HeaderContent"
                                    Value="Stretch"/>
                            <Setter Property="VerticalAlignment"
                                    TargetName="PART_HeaderContent"
                                    Value="Stretch"/>
                            <Setter Property="Margin"
                                    TargetName="PART_HeaderContent"
                                    Value="0"/>
                            <Setter Property="Margin"
                                    TargetName="PART_Header"
                                    Value="0"/>
                            <Setter Property="Margin"
                                    TargetName="PART_HeaderInternalContainer"
                                    Value="0"/>
                            <Setter Property="Margin"
                                    TargetName="PART_RightBorder"
                                    Value="0"/>
                            <Setter Property="Margin"
                                    TargetName="PART_HeaderContainer"
                                    Value="0"/>
                        </Trigger>
                        <!--#endregion-->
                        <!--#region Expand Collapse-->
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="IsExpanded"
                                    TargetName="PART_Expander"
                                    Value="False"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ItemVisibilityMode, RelativeSource={RelativeSource Self}}" Value="ShowSubItems"/>
                                <Condition Binding="{Binding ItemLevel, RelativeSource={RelativeSource Self}}" Value="0"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsExpanded"
                                    TargetName="PART_Expander"
                                    Value="True"/>
                            <Setter Property="ExpandStoryboard"
                                    TargetName="PART_Expander"
                                    Value="{x:Null}"/>
                            <Setter Property="CollapseStoryboard"
                                    TargetName="PART_Expander"
                                    Value="{x:Null}"/>
                        </MultiDataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded"
                                           SourceName="PART_Expander"
                                           Value="true"/>
                                <Condition Property="Expanding"
                                           SourceName="PART_Expander"
                                           Value="false"/>
                                <Condition Property="AllowAnimation" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="AnimationProgress"
                                    TargetName="PART_Expander"
                                    Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="AnimationProgress"
                                           SourceName="PART_Expander"
                                           Value="0"/>
                                <Condition Property="AllowAnimation" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility"
                                    TargetName="ItemsHost"
                                    Value="Collapsed"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded"
                                           SourceName="PART_Expander"
                                           Value="false"/>
                                <Condition Property="AllowAnimation" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility"
                                    TargetName="ItemsHost"
                                    Value="Collapsed"/>
                        </MultiTrigger>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="ItemState"
                                    TargetName="PART_BackgroundControl"
                                    Value="SelectedInactive"/>
                        </Trigger>
                        <!--#endregion-->
                        <!--#region Glyph-->
                        <Trigger Property="ActualGlyphPosition" Value="Left">
                            <Setter Property="Visibility"
                                    TargetName="PART_Glyph"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ActualGlyphPosition" Value="Right">
                            <Setter Property="Visibility"
                                    TargetName="PART_Glyph"
                                    Value="Visible"/>
                            <Setter Property="Grid.Column"
                                    TargetName="PART_Glyph"
                                    Value="5"/>
                            <Setter Property="Grid.Row"
                                    TargetName="PART_Glyph"
                                    Value="1"/>
                        </Trigger>
                        <Trigger Property="ActualGlyphPosition" Value="Top">
                            <Setter Property="Visibility"
                                    TargetName="PART_Glyph"
                                    Value="Visible"/>
                            <Setter Property="Grid.Column"
                                    TargetName="PART_Glyph"
                                    Value="3"/>
                            <Setter Property="Grid.Row"
                                    TargetName="PART_Glyph"
                                    Value="0"/>
                        </Trigger>
                        <!--#endregion-->
                        <!--#region Header row-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="dx:ThemeManager.IsTouchEnabled" Value="True"/>
                                <Condition Property="ItemType" Value="SubItem"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="MinHeight"
                                    TargetName="HeaderRow"
                                    Value="{StaticResource HeaderTouchHeight}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="dx:ThemeManager.IsTouchEnabled" Value="True"/>
                                <Condition Property="ItemType" Value="RootItem"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="MinHeight"
                                    TargetName="HeaderRow"
                                    Value="{StaticResource HeaderTouchHeight}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ItemType" Value="RootItem"/>
                                <Condition Property="dx:ThemeManager.IsTouchEnabled" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="MinHeight"
                                    TargetName="HeaderRow"
                                    Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderHeight}}"/>
                        </MultiTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ItemVisibilityMode, RelativeSource={RelativeSource Self}}" Value="ShowSubItems"/>
                                <Condition Binding="{Binding ItemLevel, RelativeSource={RelativeSource Self}}" Value="0"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="MinHeight"
                                    TargetName="HeaderRow"
                                    Value="0"/>
                            <Setter Property="Height"
                                    TargetName="HeaderRow"
                                    Value="0"/>
                            <Setter Property="Margin"
                                    TargetName="PART_Expander"
                                    Value="0"/>
                        </MultiDataTrigger>
                        <!--#endregion-->
                        <!--#region Expand buttons visibility setters-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasItems, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility"
                                    TargetName="PART_ExpandButton"
                                    Value="Visible"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasItems, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Left"/>
                                <Condition Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Margin"
                                    TargetName="PART_ExpandButton"
                                    Value="{StaticResource LeftExpanderTouchMargin}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasItems, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility"
                                    TargetName="PART_ExpandButton"
                                    Value="Visible"/>
                            <Setter Property="Grid.Column"
                                    TargetName="PART_ExpandButton"
                                    Value="6"/>
                            <Setter Property="IsRightExpandButton"
                                    TargetName="PART_ExpandButton"
                                    Value="True"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasItems, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Right"/>
                                <Condition Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Margin"
                                    TargetName="PART_ExpandButton"
                                    Value="{StaticResource RightExpanderTouchMargin}"/>
                        </MultiDataTrigger>
                        <!--#endregion-->
                        <!--#region ExpandButtonContainer-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Left"/>
                                <Condition Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="MinWidth"
                                    TargetName="LeftExpandButtonColumn"
                                    Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ExpandButtonContainerMinWidth}}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Left"/>
                                <Condition Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="MinWidth"
                                    TargetName="LeftExpandButtonColumn"
                                    Value="{StaticResource ExpandButtonContainerTouchMinWidth}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Right"/>
                                <Condition Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="MinWidth"
                                    TargetName="RightExpandButtonColumn"
                                    Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ExpandButtonContainerMinWidth}}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Right"/>
                                <Condition Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="MinWidth"
                                    TargetName="RightExpandButtonColumn"
                                    Value="{StaticResource ExpandButtonContainerTouchMinWidth}"/>
                        </MultiDataTrigger>
                        <!--#endregion-->
                        <!--#region Foreground & States-->
                        <Trigger Property="ItemType" Value="RootItem">
                            <Setter Property="Foreground"
                                    TargetName="PART_ExpandButton"
                                    Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderDefaultForeground}}"/>
                        </Trigger>
                        <Trigger Property="ItemType" Value="RootItem">
                            <Setter Property="TextBlock.Foreground"
                                    TargetName="PART_HeaderContent"
                                    Value="#273040"
                                    cs:id="Setter_0001"/>
                        </Trigger>
                        <Trigger Property="ItemType" Value="SubItem">
                            <Setter Property="TextBlock.Foreground"
                                    TargetName="PART_HeaderContent"
                                    Value="#6a7587"
                                    cs:id="Setter_0002"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="ItemState"
                                    TargetName="PART_BackgroundControl"
                                    Value="Selected"/>
                            <Setter Property="ItemState"
                                    TargetName="PART_ExpandButton"
                                    Value="Selected"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsSelectionActive" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ItemState"
                                    TargetName="PART_BackgroundControl"
                                    Value="SelectedInactive"/>
                            <Setter Property="ItemState"
                                    TargetName="PART_ExpandButton"
                                    Value="SelectedInactive"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="ItemType" Value="SubItem"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Tag"
                                    TargetName="PART_RootContentControl"
                                    Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderSelectedForeground}}"/>
                            <Setter Property="Foreground"
                                    TargetName="PART_ExpandButton"
                                    Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderSelectedForeground}}"/>
                            <Setter Property="TextBlock.Foreground"
                                    TargetName="PART_HeaderContent"
                                    Value="#558bdc"
                                    cs:id="Setter_0003"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsSelectionActive" Value="False"/>
                                <Condition Property="ItemType" Value="SubItem"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Tag"
                                    TargetName="PART_RootContentControl"
                                    Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderSelectedInactiveForeground}}"/>
                            <Setter Property="Foreground"
                                    TargetName="PART_ExpandButton"
                                    Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderSelectedInactiveForeground}}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="ItemType" Value="RootItem"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Tag"
                                    TargetName="PART_RootContentControl"
                                    Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderSelectedForeground}}"/>
                            <Setter Property="Foreground"
                                    TargetName="PART_ExpandButton"
                                    Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderSelectedForeground}}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsSelectionActive" Value="False"/>
                                <Condition Property="ItemType" Value="RootItem"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Tag"
                                    TargetName="PART_RootContentControl"
                                    Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderSelectedInactiveForeground}}"/>
                            <Setter Property="Foreground"
                                    TargetName="PART_ExpandButton"
                                    Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderSelectedInactiveForeground}}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOverHeader" Value="True"/>
                                <Condition Property="ActualHighlightOnHover" Value="True"/>
                                <Condition Property="ItemType" Value="SubItem"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Tag"
                                    TargetName="PART_RootContentControl"
                                    Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderHoverForeground}}"/>
                            <Setter Property="Foreground"
                                    TargetName="PART_ExpandButton"
                                    Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderHoverForeground}}"/>
                            <Setter Property="ItemState"
                                    TargetName="PART_BackgroundControl"
                                    Value="Hover"/>
                            <Setter Property="ItemState"
                                    TargetName="PART_ExpandButton"
                                    Value="Hover"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOverHeader" Value="True"/>
                                <Condition Property="ActualHighlightOnHover" Value="True"/>
                                <Condition Property="ItemType" Value="RootItem"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Tag"
                                    TargetName="PART_RootContentControl"
                                    Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderHoverForeground}}"/>
                            <Setter Property="Foreground"
                                    TargetName="PART_ExpandButton"
                                    Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderHoverForeground}}"/>
                            <Setter Property="ItemState"
                                    TargetName="PART_BackgroundControl"
                                    Value="Hover"/>
                            <Setter Property="ItemState"
                                    TargetName="PART_ExpandButton"
                                    Value="Hover"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"/>
                                <Condition Property="ActualHighlightOnPress" Value="True"/>
                                <Condition Property="ItemType" Value="SubItem"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ItemState"
                                    TargetName="PART_ExpandButton"
                                    Value="Pressed"/>
                            <Setter Property="ItemState"
                                    TargetName="PART_BackgroundControl"
                                    Value="Pressed"/>
                            <Setter Property="Tag"
                                    TargetName="PART_RootContentControl"
                                    Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderPressedForeground}}"/>
                            <Setter Property="Foreground"
                                    TargetName="PART_ExpandButton"
                                    Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderPressedForeground}}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"/>
                                <Condition Property="ActualHighlightOnPress" Value="True"/>
                                <Condition Property="ItemType" Value="RootItem"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ItemState"
                                    TargetName="PART_ExpandButton"
                                    Value="Pressed"/>
                            <Setter Property="ItemState"
                                    TargetName="PART_BackgroundControl"
                                    Value="Pressed"/>
                            <Setter Property="Tag"
                                    TargetName="PART_RootContentControl"
                                    Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderPressedForeground}}"/>
                            <Setter Property="Foreground"
                                    TargetName="PART_ExpandButton"
                                    Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderPressedForeground}}"/>
                        </MultiTrigger>
                        <Trigger Property="ItemType" Value="Wrapper">
                            <Setter Property="ItemState"
                                    TargetName="PART_BackgroundControl"
                                    Value="Default"/>
                        </Trigger>
                        <!--#endregion-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <dxan:AccordionVirtualizingPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <DataTrigger Binding="{Binding Path=GlyphTemplateSelector, RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}" Value="True">
                <Setter Property="GlyphTemplate" Value="{x:Null}"/>
            </DataTrigger>
            <Trigger Property="ItemType" Value="RootItem">
                <Setter Property="FontWeight" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderFontWeight}}"/>
                <Setter Property="FontSize" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderFontSize}}"/>
            </Trigger>
            <Trigger Property="ItemType" Value="Wrapper">
                <Setter Property="GlyphPosition" Value="None"/>
                <Setter Property="HighlightOnHover" Value="False"/>
                <Setter Property="HighlightOnPress" Value="False"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Focusable" Value="False"/>
            </Trigger>
            <Trigger Property="ItemVisibilityMode" Value="Collapsed">
                <Setter Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>