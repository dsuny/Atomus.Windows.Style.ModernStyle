<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Common.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="textblock_base" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="NotoSansCJKkr" />
    </Style>

    <!--<Style x:Key="textblock_system_name" TargetType="TextBlock" BasedOn="{StaticResource textblock_base}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Opacity" Value="0.42"/>
    </Style>-->

    <Style x:Key="textblock_welcome" TargetType="TextBlock" BasedOn="{StaticResource textblock_base}">
        <Setter Property="FontSize" Value="48" />
        <Setter Property="Foreground" Value="#FFFFFF" />
    </Style>

    <Style x:Key="textblock_legacy_system" TargetType="TextBlock" BasedOn="{StaticResource textblock_base}">
        <Setter Property="FontSize" Value="28" />
        <Setter Property="Foreground" Value="#FFFFFF" />
    </Style>

    <Style x:Key="textblock_login" TargetType="TextBlock" BasedOn="{StaticResource textblock_base}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Opacity" Value="0.47"/>
    </Style>

    <Style x:Key="textblock_login_notamember" TargetType="TextBlock" BasedOn="{StaticResource textblock_base}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="#52565c" />
    </Style>


    <ControlTemplate x:Key="combobox_togglebutton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <!--<Border Grid.Column="0" CornerRadius="0" Margin="1" Background="#FF3F3F3F" BorderBrush="#FF97A0A5" BorderThickness="0,0,1,0" />-->

            <!--<Border Grid.Column="0" CornerRadius="0" />-->

            <!--<Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="0" Background="#FF3F3F3F" BorderBrush="#FF97A0A5" BorderThickness="1" />-->
            <!--<Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="12" Background="Transparent" BorderBrush="#b3becc" BorderThickness="1"/>-->

            <Image x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Width="20" Height="20"
                   Source="/Atomus.Windows.Style.ModernStyle;component/Images/ModernDark/ComboBox/icon-common-arrow-down-n.png" />

            <!--<Path x:Name="Arrow" Grid.Column="1" Fill="White" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"/>-->
        </Grid>
        <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
    </ControlTemplate>
    <ControlTemplate x:Key="combobox_textbox_editable" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}"/>
    </ControlTemplate>

    <Style x:Key="combox_login" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="140"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Foreground" Value="#FF182233"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Focusable="false" ClickMode="Press" 
                                      HorizontalAlignment="Right" Margin="8" VerticalAlignment="Stretch"
                                      Template="{StaticResource combobox_togglebutton}" 
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>

                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>

                        <TextBox x:Name="PART_EditableTextBox" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="True" 
                                 Foreground="Green" Background="#FF3F3F3F" Visibility="Hidden" FontFamily="NotoSansCJKkr" FontSize="18"
                                 FontStyle="Normal" FontWeight="Medium"
                                 Style="{x:Null}" 
                                 Template="{StaticResource combobox_textbox_editable}" 
                                 IsReadOnly="{TemplateBinding IsReadOnly}"/>

                        <Popup Name="Popup" Placement="Bottom" AllowsTransparency="True" PopupAnimation="Slide" Focusable="False"
                               IsOpen="{TemplateBinding IsDropDownOpen}">
                            <Grid Name="DropDown" SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="#ffffff" BorderThickness="1" BorderBrush="#6e9cdf"/>
                                <ScrollViewer Margin="0,0,0,0" SnapsToDevicePixels="True" Padding="0,10,0,10"
                                              Template="{DynamicResource ScrollViewer_Base}">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="5"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="Red" BorderThickness="1" CornerRadius="5">
                        <AdornedElementPlaceholder x:Name="controlWithError"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border" SnapsToDevicePixels="true">
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <ContentPresenter Name="contentPresenter" Grid.Column="0" />
                            <Border Grid.Column="0" Name="Border1" Background="Gray" Opacity="0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Foreground" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="#5a8fdc"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--<DataTemplate x:Key="cmbTemplate1">
            <DockPanel>
                <Grid Margin="10,6,0,4" Height="50" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <TextBlock Text="{Binding Name}" VerticalAlignment="Center" Style="{DynamicResource text_normal_medium_15}"/>
                </Grid>
            </DockPanel>
        </DataTemplate>-->



    <Style x:Key="textblock_placeholder_login" TargetType="TextBlock" BasedOn="{StaticResource textblock_base}">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="textbox_base" TargetType="TextBox">
        <Setter Property="FontFamily" Value="NotoSansCJKkr" />
    </Style>
    <Style x:Key="textbox_login_style" TargetType="TextBox" BasedOn="{StaticResource textbox_base}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="#182233" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <!--<Setter Property="Background" Value="Transparent" />-->
    </Style>

    <Style x:Key="textbox_login" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="MaxHeight" Value="40"/>        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Name="border1" Margin="0" CornerRadius="5" Grid.Row="0" Grid.Column="0" MinHeight="40" MaxHeight="40">
                        <Grid>
                            <TextBox x:Name="textSource" Panel.ZIndex="2"  Padding="0,2,0,0" BorderThickness="0" Margin="10,0,10,0" Background="Transparent"
                                     Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     Style="{StaticResource textbox_login_style}">
                                <Validation.ErrorTemplate>
                                    <ControlTemplate>
                                        <DockPanel>
                                            <Border BorderBrush="Gray" BorderThickness="1">
                                                <AdornedElementPlaceholder x:Name="controlWithError"/>
                                            </Border>
                                        </DockPanel>
                                    </ControlTemplate>
                                </Validation.ErrorTemplate>
                            </TextBox>

                            <TextBlock Panel.ZIndex="1" Padding="2,2,0,0" Margin="10,0,10,0"                                       
                                       Text="{TemplateBinding Tag}">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource textblock_placeholder_login}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="#FF828791"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>                            
                        </Grid>

                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="#f3f5f8"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="Red" BorderThickness="1" CornerRadius="4">
                        <AdornedElementPlaceholder x:Name="controlWithError"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>




    <Style x:Key="textblock_actionbutton_login" TargetType="TextBlock" BasedOn="{StaticResource textblock_base}">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>

    <Style x:Key="ActionButton_login" TargetType="Button">
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#558bdc"/>
        <Setter Property="Background" Value="#558bdc"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" Background="#558bdc" CornerRadius="4" BorderThickness="1" BorderBrush="#457dd0">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1,4,0,0"
                                   Text="{TemplateBinding Tag}" Style="{StaticResource textblock_actionbutton_login}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#669ff4"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#4273bc"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#1e529f"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="checkBox_base" TargetType="CheckBox">
        <Setter Property="FontFamily" Value="NotoSansCJKkr" />
    </Style>

    <Style x:Key="checkbox_login" TargetType="CheckBox" BasedOn="{StaticResource checkBox_base}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="#FF52565C" />
    </Style>



    <Style x:Key="button_base" TargetType="Button">
        <Setter Property="FontFamily" Value="NotoSansCJKkr" />
    </Style>
    <Style x:Key="textblock_login_passwordchange" TargetType="TextBlock" BasedOn="{StaticResource textblock_base}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="#dc8773" />
    </Style>

    <Style x:Key="button_login_passwordchange" TargetType="Button" BasedOn="{StaticResource button_base}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="#7b8390" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="button">
                        <Grid>
                            <Border>
                                <TextBlock x:Name="textBlock" TextWrapping="Wrap" TextDecorations="{x:Null}"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           FontSize="{TemplateBinding FontSize}"
                                           Foreground="{TemplateBinding Foreground}">
                                    <ContentPresenter />
                                </TextBlock>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" >
                            <Setter TargetName="textBlock" Property="TextBlock.TextDecorations" Value="Baseline" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="textblock_login_signupnow" TargetType="TextBlock" BasedOn="{StaticResource textblock_base}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="#558bdc" />
    </Style>
    <Style x:Key="button_login_signupnow" TargetType="Button" BasedOn="{StaticResource button_base}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="button">
                        <Grid>
                            <Border>
                                <TextBlock x:Name="textBlock" TextWrapping="Wrap" TextDecorations="{x:Null}" Style="{StaticResource textblock_login_signupnow}">
                                    <ContentPresenter />
                                </TextBlock>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" >
                            <Setter TargetName="textBlock" Property="TextBlock.TextDecorations" Value="Baseline" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>